daemon off;
# stay attached to the dyno process, run in Procfile / web

pid /app/nginx.pid;

worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;
# Heroku dynos have at least 4 cores.

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any; # Heroku router sends Via header

	server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id remote_addr=$remote_addr user_agent=$http_user_agent referer=$http_referer';
  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/error.log;
  
	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;
	# Must read the body in 5 seconds.

	server {
		listen <%= ENV["PORT"] %>;
		server_name scoutfam.com;
		keepalive_timeout 5;
		client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;

		## HTTPS Only
		if ($http_x_forwarded_proto != "https") {
			return 301 https://$host$request_uri;
		}

		## Document root
		root /app/dist;

		location / {
			try_files $uri /index.html;

			error_page 404 = /index.html;
		}

		## Define specific behaviors for sub directories and other locations.
		# location /assets {
		# 	expires 7d;
		# }

		## Custom error pages
		# error_page 404 /404.html;
		# error_page 500 /500.html;
	}

}
